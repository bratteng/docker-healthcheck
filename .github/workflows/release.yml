name: release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build-and-release:
    runs-on: ubuntu-20.04
    name: "[${{matrix.flavor}}] Build and release"
    environment: cosign
    strategy:
      fail-fast: true
      matrix:
        include:
          -
            flavor: buster
            latest: true
          -
            flavor: alpine
            latest: false
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3

      -
        name: Install cosign
        uses: sigstore/cosign-installer@v2.4.1

      -
        name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          labels: |
            org.opencontainers.image.description=Healthcheck binary specific for Next.js [${{matrix.flavor}}]
          images: |
            ghcr.io/bratteng/healthcheck
            bratteng/healthcheck
          flavor: |
            latest=${{matrix.latest}}
          tags: |
            type=raw,value=${{matrix.flavor}}

      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      -
        name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and push
        id: build
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.${{ matrix.flavor }}
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha

      -
        name: Sign image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "${{ secrets.COSIGN_KEY }}" > cosign.key
          cosign sign -key cosign.key ghcr.io/bratteng/healthcheck@${{ steps.build.outputs.digest }}
          cosign sign -key cosign.key bratteng/healthcheck@${{ steps.build.outputs.digest }}
